  type TodoItem {
    id: ID!
    text: String
    isCurrent: Boolean
    created: String
  }

  type User {
    id: ID!
    username: String
    todos: [ID]
    created: String ## Unix Timestamp
  }

  interface MutationResponse {
    code: String!
    success: Boolean!
    message: String!
  }

  type UserMutationResponse implements MutationResponse {
    code: String!
    success: Boolean!
    message: String!
    user: User
    token: String
  }

  type TodoItemResponse implements MutationResponse {
    code: String!
    success: Boolean!
    message: String!
    todo: TodoItem
    user: User
  }

  type LoginUserResponse implements MutationResponse {
    code: String!
    success: Boolean!
    message: String!
    user: User
    token: String
  }

  type Query {
    getUsers: [User]
    me: User
    loginUser(username: String!, password: String!): UserMutationResponse!
  }

  type Mutation {
    addUser(username: String!, password: String!): UserMutationResponse!
    addTodo(text: String!): TodoItemResponse!
    deleteTodo(id: ID!): MutationResponse!
    editTodo(id: ID!, text: String!): TodoItemResponse!
    toggleTodo(id: ID!): TodoItemResponse!
  }